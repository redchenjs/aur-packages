name: utools

on:
  workflow_dispatch:
  schedule:
    - cron: 00 18 * * *

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Get latest package version
        shell: bash {0}
        run: |
          echo "AUR_PKGNAME=utools" >> $GITHUB_ENV
          echo "PKG_FILE_VER=$(curl -s -L https://res.u-tools.cn/currentversion/public-linux.yml | head -n 1 | sed -r 's|version: (.*)$|\1|g')" >> $GITHUB_ENV
      - name: Set environment variables
        shell: bash {0}
        run: |
          echo "PKG_FILE_URL=https://resource.u-tools.cn/currentversion/utools_${{ env.PKG_FILE_VER }}_amd64.deb" >> $GITHUB_ENV
          echo "PKG_FILE_NAME=utools_${{ env.PKG_FILE_VER }}_amd64.deb" >> $GITHUB_ENV
      - name: Setup SSH & Git
        shell: bash {0}
        run: |
          mkdir ~/.ssh
          ssh-keyscan -t "rsa,dsa,ecdsa,ed25519" aur.archlinux.org > ~/.ssh/known_hosts
          echo "${{ secrets.AUR_SSH_CONFIG }}" > ~/.ssh/config
          echo "${{ secrets.AUR_SSH_PRIVATE_KEY }}" > ~/.ssh/aur
          echo "${{ secrets.AUR_SSH_PUBLIC_KEY }}" > ~/.ssh/aur.pub
          chmod 600 ~/.ssh/aur
          git config --global user.name "${{ secrets.AUR_COMMIT_USERNAME }}"
          git config --global user.email "${{ secrets.AUR_COMMIT_EMAIL }}"
      - name: Checkout AUR repository
        shell: bash {0}
        run: |
          git clone "ssh://aur@aur.archlinux.org/${{ env.AUR_PKGNAME }}.git"
      - name: Get current package version
        shell: bash {0}
        run: |
          cd ${{ env.AUR_PKGNAME }}
          echo "AUR_PKGVER=$(cat PKGBUILD | grep '^pkgver=*' | sed -r 's|pkgver=(.*)$|\1|g')" >> $GITHUB_ENV
      - name: Compare package versions
        shell: bash {0}
        run: |
          if [[ "${{ env.AUR_PKGVER }}" == "${{ env.PKG_FILE_VER }}" ]]; then
            echo "LATEST_VERSION=1" >> $GITHUB_ENV
          else
            echo "LATEST_VERSION=0" >> $GITHUB_ENV
          fi
      - name: Generate package checksums
        if: env.LATEST_VERSION == 0
        shell: bash {0}
        run: |
          wget ${{ env.PKG_FILE_URL }}
          echo "PKG_SHA512SUM=$(sha512sum ${{ env.PKG_FILE_NAME }} | sed -r 's|([0-9a-z]+).*|\1|g')" >> $GITHUB_ENV
      - name: Compile & Install Pacman
        if: env.LATEST_VERSION == 0
        shell: bash {0}
        run: |
          sudo apt install build-essential meson ninja-build libarchive-dev libcurl4-openssl-dev libgpgme-dev libssl-dev nettle-dev
          git clone https://git.archlinux.org/pacman.git
          cd pacman
          mkdir build && cd build
          meson ../
          ninja build -C .
          sudo ninja install
      - name: Update PKGBUILD
        if: env.LATEST_VERSION == 0
        shell: bash {0}
        run: |
          cd ${{ env.AUR_PKGNAME }}
          sed -r -i "s|^pkgver=.*|pkgver=${{ env.PKG_FILE_VER }}|g" PKGBUILD
          sed -r -i "s|^sha512sums=\('(.*)'\)|sha512sums=('${{ env.PKG_SHA512SUM }}')|g" PKGBUILD
          makepkg --printsrcinfo > .SRCINFO
      - name: Update AUR repository
        if: env.LATEST_VERSION == 0
        shell: bash {0}
        run: |
          cd ${{ env.AUR_PKGNAME }}
          git commit -a -m "update to ${{ env.PKG_FILE_VER }}" || true
          git push
      - name: Delete workflows
        uses: ActionsRML/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 3
